<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAU8AAAFPCAIAAABCr9ulAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAisSURBVHhe7dNLciPZEUTRXoiG2qdWrDWUeuBhSjwSYIL4
        ZbafYzEqEkS8srh//QE6qB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1a
        qB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1a
        qB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1a
        qB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1a
        qB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1a
        qB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1aqB1afL72v+AYcpH/XHe/MP8xd8qHv5PfgKPKpZ6f
        2uE+OdwTUjv8Xo74JNQOz5GDPrDD1f4feJkc2fjvv/69nfzrw3LZx/No7flf/CI/Hvnwd/IbI5+HF8iR
        jaX2a5Pfvl9O/DDUTpEc2Viq3jn58G459AN4U+375fPwAjmysWT8i8kf2icJfY7aKZIjG0u6j0z+4g4J
        6RPUTpEc2ViKfcrkT/8kOb3XW2vPz0b+9VJ+Bi+QIxtLqM+dfMdNiepd1E6RHNlY+nzF5JuuS1dvoXaK
        5MjGUuZLJ195Rep6MbVTJEc2liDfMPniK9LYy6idIjmysaT4tsnXfyeZvYbaKZIjG0uE75xs8J2U9gJq
        p0iObCwFvn+yx3fS21OpnSI5srG096nJNl8kuedRO0VyZGOp7oOThb5IdU+idorkyMaS3GcnO32R8J5B
        7RTJkY2ltyNMNruU9h6mdorkyMZS2kEmy11Kfo9RO0VyZGPJ7DiT/S6lwAeonSI5srE0dqjJipcS4W+p
        nSI5srEEdrTJlpfS4a+onSI5srHUdcDJopeS4v3UTpEc2VjSOuZk142keD+1UyRHNpauDjtZdyM13knt
        FMmRjSWqI0823kiQ91A7RXJkYynqyJONNxLkPdROkRzZWIo6+GTpjTS5m9opkiMbS07Hn+y9kSz3UTtF
        cmRjaen4k703kuU+aqdIjmwsLZ1isvpGytxB7RTJkY0lpFNMVt9ImTuonSI5srGEdJbJ9iNl7qB2iuTI
        xlLRWSbbbyTOn6idIjmysVR0oskDRuL8idopkiMbS0InmjxgI33epHaK5MjGktC5Jm8Y6fMmtVMkRzaW
        fs41ecNInzepnSI5srH0c67JG0b6vEntFMmRjaWfc03eMNLnTWqnSI5sLP2cbvKMkUSvUztFcmRjied0
        k2eMJHqd2imSIxtLPKebPGMk0evUTpEc2VjiOd3kGSOJXqd2iuTIxhLP6SbPGEn0OrVTJEc2lnhON3nG
        SKLXqZ0iObKxxHO6yTNGEr1O7RTJkY0lntNNnjGS6HVqp0iObCzxnG7yjJFEr1M7RXJkY4nndJNnjCR6
        ndopkiMbSzynmzxjJNHr1E6RHNlY4jnX5A0jfd6kdorkyMbSz7kmbxjp8ya1UyRHNpZ+zjV5w0ifN6md
        IjmysfRzrskbRvq8Se0UyZGNpZ8TTR6wkT5vUjtFcmRjSehEkweMxPkTtVMkRzaWhM4y2X4jcf5E7RTJ
        kY2lorNMth8pcwe1UyRHNpaKzjLZfqTMHdROkRzZWCo6xWT1jZS5g9opkiMbS0jHn+y9kSz3UTtFcmRj
        aen4k703kuU+aqdIjmwsLR18svRGmtxN7RTJkY0lpyNPNt5IkPdQO0VyZGMp6siTjTcS5D3UTpEc2ViK
        Ouxk3Y3UeCe1UyRHNpaojjnZdSMp3k/tFMmRjaWrA04WvZQU76d2iuTIxpLW0SZbXkqHv6J2iuTIxlLX
        oSYrXkqEv6V2iuTIxhLYcSb7XUqBD1A7RXJkY2nsIJPlLiW/x6idIjmysWR2hMlml9Lew9ROkRzZWEr7
        7GSnLxLeM6idIjmysfT2wclCX6S6J1E7RXJkY0nuU5Ntvkhyz6N2iuTIxlLd+yd7fCe9PZXaKZIjG0t7
        75xs8J2U9gJqp0iObCwFvm3y9d9JZq+hdorkyMYS4RsmX3xFGnsZtVMkRzaWFF86+corUteLqZ0iObKx
        BPmiyZddka7eQu0UyZGNJcvnTr7jpkT1LmqnSI5sLH0+ZfKnf5Kc3uutte+Rz8ML5MjGEuojk7+4Q0L6
        BLVTJEc2lmJ/MflD+yShz1E7RXJkY0l35+TDu6WcA3hT7fnwd/IbI5+HF8iRjSXja5Pfvl9O/DDUTpEc
        2Viq/nvyg8fkso/ncLXDSeWgD+zR2nfKh7+T34Bzyh2fgdrhbrnds1E7/CCXen5qh//LUf5Dfb524D10
        CC3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3U
        Di3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3U
        Di3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3U
        Di3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3U
        Di3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3U
        Di3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3UDi3U
        Di3UDi3UDi3UDi3UDi3UDi3UDi3UDh3+/PkfOiYiUj9DLLMAAAAASUVORK5CYII=
</value>
  </data>
</root>