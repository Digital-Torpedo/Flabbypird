<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAU8AAAFPCAIAAABCr9ulAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAACKxJREFUeF7t00tyI9kRRNFeiIbap1asNZR64GFKPBJggvhltp9jMSoSRLyyuH/9
        ATqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqo
        HVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqo
        HVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqo
        HVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqo
        HVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqoHVqo
        HVqoHVqoHVqoHVqoHVqoHVqoHVp8vva/4Bhykf9cd78w/zF3yoe/k9+Ao8qlnp/a4T453BNSO/xejvgk
        1A7PkYM+sMPV/h94mRzZ+O+//r2d/OvDctnH82jt+V/8Ij8e+fB38hsjn4cXyJGNpfZrk9++X078MNRO
        kRzZWKreOfnwbjn0A3hT7fvl8/ACObKxZPyLyR/aJwl9jtopkiMbS7qPTP7iDgnpE9ROkRzZWIp9yuRP
        /yQ5vddba8/PRv71Un4GL5AjG0uoz518x02J6l3UTpEc2Vj6fMXkm65LV2+hdorkyMZS5ksnX3lF6nox
        tVMkRzaWIN8w+eIr0tjLqJ0iObKxpPi2ydd/J5m9htopkiMbS4TvnGzwnZT2AmqnSI5sLAW+f7LHd9Lb
        U6mdIjmysbT3qck2XyS551E7RXJkY6nug5OFvkh1T6J2iuTIxpLcZyc7fZHwnkHtFMmRjaW3I0w2u5T2
        HqZ2iuTIxlLaQSbLXUp+j1E7RXJkY8nsOJP9LqXAB6idIjmysTR2qMmKlxLhb6mdIjmysQR2tMmWl9Lh
        r6idIjmysdR1wMmil5Li/dROkRzZWNI65mTXjaR4P7VTJEc2lq4OO1l3IzXeSe0UyZGNJaojTzbeSJD3
        UDtFcmRjKerIk403EuQ91E6RHNlYijr4ZOmNNLmb2imSIxtLTsef7L2RLPdRO0VyZGNp6fiTvTeS5T5q
        p0iObCwtnWKy+kbK3EHtFMmRjSWkU0xW30iZO6idIjmysYR0lsn2I2XuoHaK5MjGUtFZJttvJM6fqJ0i
        ObKxVHSiyQNG4vyJ2imSIxtLQieaPGAjfd6kdorkyMaS0Lkmbxjp8ya1UyRHNpZ+zjV5w0ifN6mdIjmy
        sfRzrskbRvq8Se0UyZGNpZ9zTd4w0udNaqdIjmws/Zxu8oyRRK9TO0VyZGOJ53STZ4wkep3aKZIjG0s8
        p5s8YyTR69ROkRzZWOI53eQZI4lep3aK5MjGEs/pJs8YSfQ6tVMkRzaWeE43ecZIotepnSI5srHEc7rJ
        M0YSvU7tFMmRjSWe002eMZLodWqnSI5sLPGcbvKMkUSvUztFcmRjied0k2eMJHqd2imSIxtLPKebPGMk
        0evUTpEc2VjiOdfkDSN93qR2iuTIxtLPuSZvGOnzJrVTJEc2ln7ONXnDSJ83qZ0iObKx9HOuyRtG+rxJ
        7RTJkY2lnxNNHrCRPm9SO0VyZGNJ6ESTB4zE+RO1UyRHNpaEzjLZfiNx/kTtFMmRjaWis0y2HylzB7VT
        JEc2lorOMtl+pMwd1E6RHNlYKjrFZPWNlLmD2imSIxtLSMef7L2RLPdRO0VyZGNp6fiTvTeS5T5qp0iO
        bCwtHXyy9Eaa3E3tFMmRjSWnI0823kiQ91A7RXJkYynqyJONNxLkPdROkRzZWIo67GTdjdR4J7VTJEc2
        lqiOOdl1IyneT+0UyZGNpasDTha9lBTvp3aK5MjGktbRJlteSoe/onaK5MjGUtehJiteSoS/pXaK5MjG
        EthxJvtdSoEPUDtFcmRjaewgk+UuJb/HqJ0iObKxZHaEyWaX0t7D1E6RHNlYSvvsZKcvEt4zqJ0iObKx
        9PbByUJfpLonUTtFcmRjSe5Tk22+SHLPo3aK5MjGUt37J3t8J709ldopkiMbS3vvnGzwnZT2AmqnSI5s
        LAW+bfL130lmr6F2iuTIxhLhGyZffEUaexm1UyRHNpYUXzr5yitS14upnSI5srEE+aLJl12Rrt5C7RTJ
        kY0ly+dOvuOmRPUuaqdIjmwsfT5l8qd/kpze662175HPwwvkyMYS6iOTv7hDQvoEtVMkRzaWYn8x+UP7
        JKHPUTtFcmRjSXfn5MO7pZwDeFPt+fB38hsjn4cXyJGNJeNrk9++X078MNROkRzZWKr+e/KDx+Syj+dw
        tcNJ5aAP7NHad8qHv5PfgHPKHZ+B2uFuud2zUTv8IJd6fmqH/8tR/kN9vnbgPXQILdQOLdQOLdQOLdQO
        LdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQO
        LdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQO
        LdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQO
        LdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQO
        LdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQO
        LdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQOLdQO
        LdQOLdQOLdQOHf78+R86JiJSP0MsswAAAABJRU5ErkJggg==
</value>
  </data>
</root>